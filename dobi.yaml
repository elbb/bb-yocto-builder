# ===================================================
# mount points
# ===================================================
mount=mount-yocto-builder-source-dir:
  bind: "{fs.projectdir}/yocto"
  path: /yocto
  read-only: true

mount=mount-yocto-builder-conf-dir:
  bind: "{fs.projectdir}/yocto-conf"
  path: /yocto-build/conf
  read-only: false

mount=mount-yocto-builder-download-dir:
  bind: "{fs.projectdir}/gen/yocto-download"
  path: /yocto-download
  read-only: false

mount=mount-yocto-builder-sstate-dir:
  bind: "{fs.projectdir}/gen/yocto-sstate"
  path: /yocto-sstate
  read-only: false

mount=mount-yocto-builder-build-dir:
  bind: "{fs.projectdir}/build/yocto-build"
  path: /yocto-build
  read-only: false

mount=mount-yocto-builder-deploy-dir:
  bind: "{fs.projectdir}/gen/yocto-deploy"
  path: /yocto-deploy
  read-only: false


# ===================================================
# images
# ===================================================

image=bb-yocto-builder-buildimage:
  image: "{env.YOCTO_BUILDER_IMAGE:elbb/bb-yocto-builder}"
  context: "yocto-builder"
  tags: ["{env.GitVersion_BranchVersion}"]
  annotations:
    description: "-> generate container image with all yocto build dependencies"

# ===================================================
# jobs
# ===================================================
job=bb-yocto-builder-interactive-build-shell:
  use: bb-yocto-builder-buildimage
  mounts:
    - mount-yocto-builder-source-dir
    - mount-yocto-builder-conf-dir
    - mount-yocto-builder-download-dir
    - mount-yocto-builder-sstate-dir
    - mount-yocto-builder-build-dir
    - mount-yocto-builder-deploy-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: true
  command:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    bash
    '"
  annotations:
    description: "-> interactive build shell"

job=bb-yocto-builder-build-qemuarm-core-image-minimal:
  use: bb-yocto-builder-buildimage
  mounts:
    - mount-yocto-builder-source-dir
    - mount-yocto-builder-conf-dir
    - mount-yocto-builder-download-dir
    - mount-yocto-builder-sstate-dir
    - mount-yocto-builder-build-dir
    - mount-yocto-builder-deploy-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: false
  command:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    MACHINE=qemuarm bitbake core-image-minimal
    '"
  annotations:
    description: "-> build yocto target core-image-minimal for qemuarm"

job=bb-yocto-builder-run-yocto-qemuarm-core-image-minimal-interactive:
  use: bb-yocto-builder-buildimage
  mounts:
    - mount-yocto-builder-source-dir
    - mount-yocto-builder-conf-dir
    - mount-yocto-builder-download-dir
    - mount-yocto-builder-sstate-dir
    - mount-yocto-builder-build-dir
    - mount-yocto-builder-deploy-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: true
  privileged: true
  entrypoint:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    runqemu qemuarm nographic
    '"
  annotations:
    description: "-> build yocto target core-image-minimal for qemuarm"


# ===================================================
# alias
# ===================================================

alias=bb-yocto-builder-version:
  tasks:
  - buildingblock-version
  annotations:
    description: "-> generate version informations (auto called by dobi.sh)"

# alias=bb-yocto-builder-build:
#   tasks: []
#   annotations:
#     description: "-> build all content (not implemented yet)"

# alias=bb-yocto-builder-deploy:
#   tasks: []
#   annotations:
#     description: "-> deploy all content (not implemented yet)"

# alias=bb-yocto-builder-test:
#   tasks: []
#   annotations:
#     description: "-> test all content (not implemented yet)"

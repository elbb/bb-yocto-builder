# ===================================================
# mount points
# ===================================================
mount=mount-source-dir:
  bind: "{fs.projectdir}/yocto"
  path: /yocto
  read-only: true

mount=mount-conf-dir:
  bind: "{fs.projectdir}/yocto-conf"
  path: /yocto-build/conf
  read-only: false

mount=mount-download-dir:
  bind: "{env.BB_YOCTO_DL_DIR}"
  path: /yocto-download
  read-only: false

mount=mount-sstate-dir:
  bind: "{env.BB_YOCTO_SSTATE_DIR}"
  path: /yocto-sstate
  read-only: false

mount=mount-build-dir:
  bind: "{fs.projectdir}/build/yocto-build"
  path: /yocto-build
  read-only: false

mount=mount-deploy-dir:
  bind: "{fs.projectdir}/gen/yocto-deploy"
  path: /yocto-deploy
  read-only: false

mount=mount-git-dir:
  bind : "{fs.projectdir}/.git"
  path: /.git
  read-only: true

mount=mount-ssh-dir:
  bind: "{user.home}/.ssh"
  path: /home/user/.ssh

# ===================================================
# images
# ===================================================
image=buildimage:
  image: "{env.BB_DOCKER_NAMESPACE}/bb-yocto-builder"
  context: "yocto-builder"
  tags: ["{env.GitVersion_BranchVersion}"]
  annotations:
    description: "-> generate container image with all yocto build dependencies"

image=pulled-buildimage:
  image: "{env.BB_DOCKER_NAMESPACE}/bb-yocto-builder"
  tags: ["{env.VERSION_BB_YOCTO_BUILDER}"]
  pull: once

# ===================================================
# jobs
# ===================================================
job=interactive-build-shell:
  use: pulled-buildimage
  mounts:
    - mount-source-dir
    - mount-conf-dir
    - mount-download-dir
    - mount-sstate-dir
    - mount-build-dir
    - mount-deploy-dir
    - mount-git-dir
    - mount-ssh-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: true
  command:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    bash
    '"
  annotations:
    description: "-> interactive build shell"

job=clean:
  use: pulled-buildimage
  mounts:
    - mount-build-dir
    - mount-deploy-dir
  entrypoint: "bash -c 'rm -rf /yocto-build/* /yocto-deploy/*'"
  annotations:
    description: "-> clean yocto build and deploy directory"

job=build-qemuarm-core-image-minimal:
  use: pulled-buildimage
  mounts:
    - mount-source-dir
    - mount-conf-dir
    - mount-download-dir
    - mount-sstate-dir
    - mount-build-dir
    - mount-deploy-dir
    - mount-git-dir
    - mount-ssh-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: true
  command:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    MACHINE=qemuarm bitbake core-image-minimal
    '"
  annotations:
    description: "-> build qemuarm core-image-minimal"

job=run-qemuarm-core-image-minimal-interactive:
  use: pulled-buildimage
  mounts:
    - mount-source-dir
    - mount-conf-dir
    - mount-download-dir
    - mount-sstate-dir
    - mount-build-dir
    - mount-deploy-dir
  env:
    - "USER_ID={user.uid}"
    - "GitVersion_BranchVersion={env.GitVersion_BranchVersion}"
    - "POKY_SRC_DIR=/yocto/poky"
    - "YOCTO_BUILD_DIR=/yocto-build"
  interactive: true
  privileged: true
  entrypoint:
    "bash -c '\
    source /yocto-build/conf/init-build-env; \
    runqemu qemuarm nographic
    '"
  annotations:
    description: "-> run qemuarm core-image-minimal"
